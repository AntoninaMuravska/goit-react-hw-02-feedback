{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Notification","message","notification","FeedbackOptions","options","onLeaveFeedback","optionButtons","Object","keys","btnGroupe","map","option","index","label","toUpperCase","slice","type","name","button","onClick","Statistics","good","neutral","bad","total","percentage","list","item","App","state","feedbackIncrement","event","target","textContent","toLowerCase","setState","prevState","countTotalFeedbacks","countPositiveFeedbackPercentage","totalFeedbacks","Math","round","this","positiveFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iBCAzDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,oBCA1ED,EAAOC,QAAU,CAAC,aAAe,qC,qKCgBlBC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,iBCIQI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGJ,UAAWC,IAAEI,aAAhB,SAA+BD,K,gBC8BzBE,EA9BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAgBC,OAAOC,KAAKJ,GAElC,OACE,oBAAIP,UAAWC,IAAEW,UAAjB,SACGH,EAAcI,KAAI,SAACC,EAAQC,GAE1B,IAAMC,EAAQF,EAAO,GAAGG,cAAgBH,EAAOI,MAAM,GACrD,OACE,6BACE,wBACEC,KAAK,SACLC,KAAMJ,EACNhB,UAAWC,IAAEoB,OACbC,QAASd,EAJX,SAMGQ,KAPID,S,gBCeJQ,EAxBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OACE,mCACE,qBAAI5B,UAAWC,IAAE4B,KAAjB,UACE,qBAAI7B,UAAWC,IAAE6B,KAAjB,mBAA8BN,KAC9B,qBAAIxB,UAAWC,IAAE6B,KAAjB,sBAAiCL,KACjC,qBAAIzB,UAAWC,IAAE6B,KAAjB,kBAA6BJ,KAC7B,qBAAI1B,UAAWC,IAAE6B,KAAjB,oBAA+BH,KAC/B,qBAAI3B,UAAWC,IAAE6B,KAAjB,gCACsBN,EAAOI,EAAU,IAAS,WCoDzCG,E,4MA1DbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,kBAAoB,SAAAC,GAClB,IAAMd,EAAOc,EAAMC,OAAOC,YAAYC,cAEtC,EAAKC,UAAS,SAAAC,GAAS,sBACpBnB,EAAOmB,EAAUnB,GAAQ,O,EAI9BoB,oBAAsB,WACpB,MAA+B,EAAKR,MAEpC,OAFA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBe,gCAAkC,WAChC,IAAMC,EAAiB,EAAKF,sBAE5B,OADmBG,KAAKC,MAAO,EAAKZ,MAAMR,KAAOkB,EAAkB,M,4CAIrE,WACE,MAA+BG,KAAKb,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBgB,EAAiBG,KAAKL,sBACtBM,EAAmBD,KAAKJ,kCAE9B,OACE,qCACE,cAAC,EAAD,CAAS3C,MAAM,wBAAf,SACE,cAAC,EAAD,CACES,QAASsC,KAAKb,MACdxB,gBAAiBqC,KAAKZ,sBAI1B,cAAC,EAAD,CAASnC,MAAM,aAAf,SACG4C,EAAiB,EAChB,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,EACPd,WAAYkB,IAGd,cAAC,EAAD,CAAc1C,QAAQ,+B,GAnDhB2C,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.116fdfad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1vw6F\",\"item\":\"Statistics_item__11w2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3POXE\",\"title\":\"Section_title__1ed4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnGroupe\":\"FeedbackOptions_btnGroupe__j6dL8\",\"button\":\"FeedbackOptions_button__3-tAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__vXxCp\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const optionButtons = Object.keys(options);\n\n  return (\n    <ul className={s.btnGroupe}>\n      {optionButtons.map((option, index) => {\n        // console.log(option[0]);\n        const label = option[0].toUpperCase() + option.slice(1);\n        return (\n          <li key={index}>\n            <button\n              type=\"button\"\n              name={label}\n              className={s.button}\n              onClick={onLeaveFeedback}\n            >\n              {label}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\n  return (\n    <>\n      <ul className={s.list}>\n        <li className={s.item}>Good: {good}</li>\n        <li className={s.item}>Neutral: {neutral}</li>\n        <li className={s.item}>Bad: {bad}</li>\n        <li className={s.item}>Total: {total}</li>\n        <li className={s.item}>\n          Positive feedback: {good ? percentage + `%` : 0}\n        </li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackIncrement = event => {\n    const name = event.target.textContent.toLowerCase();\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedbacks = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const totalFeedbacks = this.countTotalFeedbacks();\n    const percentage = Math.round((this.state.good / totalFeedbacks) * 100);\n    return percentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedbacks = this.countTotalFeedbacks();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.feedbackIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalFeedbacks > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedbacks}\n              percentage={positiveFeedback}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}